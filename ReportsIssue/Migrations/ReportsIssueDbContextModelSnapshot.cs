// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReportsIssue.Models;

#nullable disable

namespace ReportsIssue.Migrations
{
    [DbContext(typeof(ReportsIssueDbContext))]
    partial class ReportsIssueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReportsIssue.Models.LocalEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.ToTable("LocalEvents");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            Category = "Roads",
                            Description = "Join us to clean up the local park.",
                            EventDate = new DateTime(2024, 10, 10, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8161),
                            Title = "Community Cleanup"
                        },
                        new
                        {
                            EventId = 2,
                            Category = "Other",
                            Description = "A talk on the latest trends in technology.",
                            EventDate = new DateTime(2024, 10, 15, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8183),
                            Title = "Tech Talk"
                        },
                        new
                        {
                            EventId = 3,
                            Category = "Sanitation",
                            Description = "Discover tips and resources for a healthier lifestyle.",
                            EventDate = new DateTime(2024, 10, 20, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8185),
                            Title = "Health and Wellness Fair"
                        },
                        new
                        {
                            EventId = 4,
                            Category = "Sanitation",
                            Description = "Join your neighbors to clean up local parks and streets.",
                            EventDate = new DateTime(2024, 10, 15, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8187),
                            Title = "Community Cleanup Day"
                        },
                        new
                        {
                            EventId = 5,
                            Category = "Roads",
                            Description = "A discussion on improving road safety and addressing local concerns.",
                            EventDate = new DateTime(2024, 10, 25, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8189),
                            Title = "Public Road Safety Forum"
                        },
                        new
                        {
                            EventId = 6,
                            Category = "Environment",
                            Description = "Help us plant trees to improve the local environment.",
                            EventDate = new DateTime(2024, 10, 17, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8191),
                            Title = "Tree Planting Drive"
                        },
                        new
                        {
                            EventId = 7,
                            Category = "Public Safety",
                            Description = "Discuss safety measures to improve public safety in your area.",
                            EventDate = new DateTime(2024, 10, 10, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8192),
                            Title = "Neighborhood Watch Meeting"
                        },
                        new
                        {
                            EventId = 8,
                            Category = "Accessibility",
                            Description = "Learn about accessibility issues and how to support an inclusive community.",
                            EventDate = new DateTime(2024, 10, 23, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8194),
                            Title = "Accessibility Awareness Workshop"
                        },
                        new
                        {
                            EventId = 9,
                            Category = "Utilities and Energy",
                            Description = "Learn tips to reduce your energy consumption and save on bills.",
                            EventDate = new DateTime(2024, 10, 12, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8196),
                            Title = "Energy Efficiency Seminar"
                        },
                        new
                        {
                            EventId = 10,
                            Category = "Housing and Buildings",
                            Description = "Join the discussion on future housing developments in the community.",
                            EventDate = new DateTime(2024, 10, 27, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8198),
                            Title = "Local Housing Development Discussion"
                        },
                        new
                        {
                            EventId = 11,
                            Category = "Traffic and Transportation",
                            Description = "Provide your feedback on proposed changes to local bus and train routes.",
                            EventDate = new DateTime(2024, 10, 14, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8199),
                            Title = "Public Transport Improvements Feedback"
                        },
                        new
                        {
                            EventId = 12,
                            Category = "Parks and Recreation",
                            Description = "Help plan the renovation of our local park facilities.",
                            EventDate = new DateTime(2024, 10, 16, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8201),
                            Title = "Park Renovation Planning"
                        },
                        new
                        {
                            EventId = 13,
                            Category = "Noise",
                            Description = "Discuss ways to reduce noise pollution in residential areas.",
                            EventDate = new DateTime(2024, 10, 21, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8203),
                            Title = "Noise Reduction Initiative Meeting"
                        },
                        new
                        {
                            EventId = 14,
                            Category = "Animal Control",
                            Description = "Come and adopt a pet while helping to control the stray animal population.",
                            EventDate = new DateTime(2024, 10, 19, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8204),
                            Title = "Stray Animal Adoption Day"
                        },
                        new
                        {
                            EventId = 15,
                            Category = "Education",
                            Description = "A forum to discuss improvements in local educational facilities and programs.",
                            EventDate = new DateTime(2024, 10, 13, 22, 22, 12, 286, DateTimeKind.Local).AddTicks(8206),
                            Title = "School Improvement Forum"
                        });
                });

            modelBuilder.Entity("ReportsIssue.Models.MediaAttachment", b =>
                {
                    b.Property<int>("MediaAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MediaAttachmentId"));

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MediaAttachmentId");

                    b.ToTable("MediaAttachments");
                });

            modelBuilder.Entity("ReportsIssue.Models.ReportIssueViewModel", b =>
                {
                    b.Property<int>("ReportsIssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportsIssueId"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaAttachmentFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MediaAttachmentId")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("ReportsIssueId");

                    b.HasIndex("MediaAttachmentId");

                    b.ToTable("ReportIssues");
                });

            modelBuilder.Entity("ReportsIssue.Models.ReportIssueViewModel", b =>
                {
                    b.HasOne("ReportsIssue.Models.MediaAttachment", "MediaAttachment")
                        .WithMany()
                        .HasForeignKey("MediaAttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaAttachment");
                });
#pragma warning restore 612, 618
        }
    }
}
